// automatically generated by the FlatBuffers compiler, do not modify

package ru.nsu.fit.dib.projectdib.flatbuffersclasses.generated;

import java.nio.*;
import java.lang.*;
import java.util.*;
import com.google.flatbuffers.*;

@SuppressWarnings("unused")
public final class WeaponActionData extends Table {
  public static void ValidateVersion() { Constants.FLATBUFFERS_2_0_8(); }
  public static WeaponActionData getRootAsWeaponActionData(ByteBuffer _bb) { return getRootAsWeaponActionData(_bb, new WeaponActionData()); }
  public static WeaponActionData getRootAsWeaponActionData(ByteBuffer _bb, WeaponActionData obj) { _bb.order(ByteOrder.LITTLE_ENDIAN); return (obj.__assign(_bb.getInt(_bb.position()) + _bb.position(), _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __reset(_i, _bb); }
  public WeaponActionData __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public int action() { int o = __offset(4); return o != 0 ? bb.getInt(o + bb_pos) : 0; }
  public int user() { int o = __offset(6); return o != 0 ? bb.getInt(o + bb_pos) : 0; }
  public int weapon() { int o = __offset(8); return o != 0 ? bb.getInt(o + bb_pos) : 0; }

  public static int createWeaponActionData(FlatBufferBuilder builder,
      int action,
      int user,
      int weapon) {
    builder.startTable(3);
    WeaponActionData.addWeapon(builder, weapon);
    WeaponActionData.addUser(builder, user);
    WeaponActionData.addAction(builder, action);
    return WeaponActionData.endWeaponActionData(builder);
  }

  public static void startWeaponActionData(FlatBufferBuilder builder) { builder.startTable(3); }
  public static void addAction(FlatBufferBuilder builder, int action) { builder.addInt(0, action, 0); }
  public static void addUser(FlatBufferBuilder builder, int user) { builder.addInt(1, user, 0); }
  public static void addWeapon(FlatBufferBuilder builder, int weapon) { builder.addInt(2, weapon, 0); }
  public static int endWeaponActionData(FlatBufferBuilder builder) {
    int o = builder.endTable();
    return o;
  }
  public static void finishWeaponActionDataBuffer(FlatBufferBuilder builder, int offset) { builder.finish(offset); }
  public static void finishSizePrefixedWeaponActionDataBuffer(FlatBufferBuilder builder, int offset) { builder.finishSizePrefixed(offset); }

  public static final class Vector extends BaseVector {
    public Vector __assign(int _vector, int _element_size, ByteBuffer _bb) { __reset(_vector, _element_size, _bb); return this; }

    public WeaponActionData get(int j) { return get(new WeaponActionData(), j); }
    public WeaponActionData get(WeaponActionData obj, int j) {  return obj.__assign(__indirect(__element(j), bb), bb); }
  }
}

